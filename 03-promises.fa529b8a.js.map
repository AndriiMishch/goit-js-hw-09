{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAGtCF,EAAKM,iBAAiB,UAGtB,SAAkBC,GAChBA,EAAEC,iBACF,IAAIC,EAAWC,OAAOP,EAAMQ,OAC5B,MAAMC,EAAUF,OAAON,EAAKO,OACtBE,EAAYH,OAAOL,EAAOM,OAChC,GAAIF,EAAW,GAAKG,EAAU,GAAKC,EAAY,EAE3C,YADFC,EAAAhB,GAASiB,OAAOC,QAAQ,yCAG1B,IAAIC,EAAI,EACUC,YAAW,KAC3B,MAAMC,EAAaC,aAAY,KAqBnC,IAAuBC,EAAUC,EApBvBL,IAAMJ,GACRU,cAAcJ,IAmBCE,EAjBHJ,EAiBaK,EAjBVb,EAkBd,IAAIe,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,IAEpCH,EAAQ,C,SAAEJ,EAAUQ,MAAAP,IAEtBI,EAAO,C,SAAEL,EAAUQ,MAAAP,GAAQ,KAtBtBQ,MAAK,EAACT,SAAEA,EAAUQ,MAAAE,MACjBjB,EAAAhB,GAASiB,OAAOiB,QACd,uBAAqBX,QAAiBU,MAAU,IAGnDE,OAAM,EAACZ,SAAEA,EAAUQ,MAAAK,MAClBpB,EAAAhB,GAASiB,OAAOC,QACd,sBAAoBK,QAAea,MAAU,IAGnDzB,GAAYG,EACZK,GAAK,CAAC,GACLL,EAAQ,GACVH,E","sources":["src/js/03-promises.js"],"sourcesContent":["//IMPORTS\nimport Notiflix from 'notiflix';\n\n//VARIABLES\nconst form = document.querySelector('form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\n//EVENTS\nform.addEventListener('submit', onSubmit);\n\n//FUNCTIONS\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delayNum = Number(delay.value);\n  const stepNum = Number(step.value);\n  const amountNum = Number(amount.value);\n  if (delayNum < 0 || stepNum < 0 || amountNum < 0) {\n    Notiflix.Notify.failure(`❌ All numbers should be higher then 0`);\n    return;\n  }\n  let i = 1;\n  const timeOutId = setTimeout(() => {\n    const intervalId = setInterval(() => {\n      if (i === amountNum) {\n        clearInterval(intervalId);\n      }\n      createPromise(i, delayNum)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      delayNum += stepNum;\n      i += 1;\n    }, stepNum);\n  }, delayNum);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    }\n    reject({ position, delay });\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","addEventListener","e","preventDefault","delayNum","Number","value","stepNum","amountNum","$parcel$interopDefault","Notify","failure","i","setTimeout","intervalId","setInterval","position","delay3","clearInterval","Promise","resolve","reject","Math","random","delay","then","delay1","success","catch","delay2"],"version":3,"file":"03-promises.fa529b8a.js.map"}